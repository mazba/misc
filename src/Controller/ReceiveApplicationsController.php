<?php
namespace App\Controller;

use App\Controller\AppController;
use Cake\Core\Configure;
use Cake\ORM\TableRegistry;
use Cake\Utility\Security;

/**
 * ReceiveApplications Controller
 *
 * @property \App\Model\Table\ApplicationsTable $Applications
 */
class ReceiveApplicationsController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Applications');
    }

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {
//        echo $dd->text;
        print_r(Security::decrypt('948cdc656375b206daf567932df8b413eb190325cf674274e6b969993cf46703',Configure::read('security_key')));
        echo '</pre>';
        die;
        $te=TableRegistry::get('testsss')->newEntity();
        $te->text = Security::encrypt('1',Configure::read('security_key'));
        TableRegistry::get('testsss')->save($te);
        die();
        $dd = Security::encrypt('dfsdf',Configure::read('security_key'));
        $dd = Security::decrypt($dd,Configure::read('security_key'));
        echo '<pre>';
        print_r($dd);
        echo '</pre>';
        die;
        $user = $this->Auth->user();
        $application_status = Configure::read('application_status');
        $applications = $this->Applications->find();
        $applications->where([
            'Applications.status'=>$application_status['Pending'],
            'Applications.division_id'=>$user['division_id'],
            'Applications.district_id'=>$user['district_id']
        ]);
        $applications->contain(['ParentApplications','Appellants','Upazilas','Moujas']);
        $applications = $this->paginate($applications);
        $this->set(compact('applications'));
        $this->set('_serialize', ['applications']);
    }

    /**
     * View method
     *
     * @param string|null $id Receive Application id.
     * @return \Cake\Network\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $receiveApplication = $this->ReceiveApplications->get($id, [
            'contain' => []
        ]);

        $this->set('receiveApplication', $receiveApplication);
        $this->set('_serialize', ['receiveApplication']);
    }

    /**
     * Receive application method
     *
     * @return \Cake\Network\Response|void Redirects on successful add, renders view otherwise.
     */
    public function receive($id=null)
    {
        $id = $this->Common->decodeString($id);
        $receiveApplication = $this->Applications->get($id);
        echo '<pre>';
        print_r($receiveApplication);
        echo '</pre>';
        die;
        if ($this->request->is('post')) {
            $receiveApplication = $this->ReceiveApplications->patchEntity($receiveApplication, $this->request->data);
            if ($this->ReceiveApplications->save($receiveApplication)) {
                $this->Flash->success(__('The receive application has been saved.'));
                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error(__('The receive application could not be saved. Please, try again.'));
            }
        }
        $this->set(compact('receiveApplication'));
        $this->set('_serialize', ['receiveApplication']);
    }

    /**
     * Reject method
     *
     * @param string|null $id Receive Application id.
     * @return \Cake\Network\Response|void Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function reject($id = null)
    {
        $receiveApplication = $this->ReceiveApplications->get($id, [
            'contain' => []
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $receiveApplication = $this->ReceiveApplications->patchEntity($receiveApplication, $this->request->data);
            if ($this->ReceiveApplications->save($receiveApplication)) {
                $this->Flash->success(__('The receive application has been saved.'));
                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error(__('The receive application could not be saved. Please, try again.'));
            }
        }
        $this->set(compact('receiveApplication'));
        $this->set('_serialize', ['receiveApplication']);
    }
    public function ajax($action=''){

    }
}
